@use './variables--general' as generalVariables;
@use './variables--colour' as colourVariables;
@use './variables--layout' as layoutVariables;


@mixin dark-mode($background: null, $colour: null) {

  @media screen and (prefers-color-scheme: dark), screen and (prefers-contrast: more) {

    @if ($background != null and $colour != null) {
      background-color: $background;
      color: $colour;
      @content;
    }
    @else if ($background != null and $colour == null) {
      background-color: $background;
      @content;
    }
    @else if ($colour != null and $background == null) {
      color: $colour;
      @content;
    }
    @else {
      @content;
    }
  }
}

@mixin high-contrast($background: null, $colour: null) {

  @media screen and (prefers-contrast: more) {

    @if ($background != null and $colour != null) {
      background-color: $background;
      color: $colour;
      @content;
    }
    @else if ($background != null and $colour == null) {
      background-color: $background;
      @content;
    }
    @else if ($colour != null and $background == null) {
      color: $colour;
      @content;
    }
    @else {
      @content;
    }
  }
}

@mixin inline-nav {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;

  li + li {
    margin-left: .5em;
  }

  a {
    display: inline-flex;
    min-height: 48px;
    align-items: center;
  }
}

@mixin highlight-box {
  background-color: colourVariables.$colour-highlight;
  border-radius: generalVariables.$border-radius-default;
  padding: 1em;
  @include dark-mode($background: colourVariables.$colour-dark-mode-highlight);
  @include high-contrast($background: colourVariables.$colour-high-contrast-highlight);

  a {

    &:focus {
      background-color: colourVariables.$colour-highlight;
      @include dark-mode($background: colourVariables.$colour-dark-mode-highlight);
      @include high-contrast($background: colourVariables.$colour-high-contrast-highlight);
    }

    &:focus:not(:focus-visible) {
      background-color: transparent;
      @include dark-mode($background: transparent);
      @include high-contrast($background: transparent);
    }

    &:focus-visible {
      background-color: colourVariables.$colour-highlight;
      @include dark-mode($background: colourVariables.$colour-dark-mode-highlight);
      @include high-contrast($background: colourVariables.$colour-high-contrast-highlight);
    }
  }
}

@mixin overspill {
  margin-left: calc(-1em);
  margin-right: calc(-1em);
}

@mixin overspill-reset {
  margin-left: 0;
  margin-right: 0;
}

@mixin boxout {
  @include highlight-box;

  @media (min-width: layoutVariables.$l) {
    @include overspill;
  }
}

@mixin embedded-media {
  border-radius: generalVariables.$border-radius-default;
  background-color: colourVariables.$colour-highlight;
  display: block;
  box-shadow: 0 0 .25em colourVariables.$colour-grey;
  margin-bottom: 1em;
  margin-top: 1em;
  height: auto;
  width: 100%;
  @include dark-mode($background: colourVariables.$colour-dark-mode-highlight);
  @include high-contrast($background: colourVariables.$colour-high-contrast-highlight);

  @media (min-width: layoutVariables.$l) {
    @include overspill;
  }

  @include dark-mode() {
    box-shadow: 0 0 .25em colourVariables.$colour-black;
  }
}
